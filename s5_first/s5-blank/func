26-4 main 함수로의 문자열 전달

main 함수의 유형
 유형 1
  int main (void)
   {
	  }
 유형 2
 int main (int  argc, char *argv[])
	{
	}


char *argv[]
 1차원 int형 배열과 1차원 double형 배열의 주소 값을 인자로 전달받는다
  void Func1 (int prm[]) {....}
  void Func2 (double prm[]) {....}
 1차원 int형 포인터 배열과 1차원 double형 포인터 배열의 주소 값을 인자로 전달 받는다
  void Func3 (int *prm[]) {....}
  void Func4 (double *prm[]) {....}
  예제)26-6.c


main 함수로의 문자열 전달
 int main (int argc, char *argv[])
  {....
   }

문자열 전달의 과정
 예제 실습으로 대체


27 함수 포인터 (Function Pointer)
 함수의 이름이 제공하는 두가지
  정의된 함수의 호출
  함수가 위치하고 있는 주소 값의 확인

 함수의 주소 값을 저장 하는 포인터 변수의 선언
  int FuncName (int arg)
   {
   }
  이 함수의 주소 값을 저장할 수 있는 포인터 변수
  int (*funcptr) (int argc);
  즉, 참조할 함수의 반환형과 매개변수 형을 모두 명시하고, 변수의 이름 앞에 * 기호를 붙여서 선언하는
  것이 포인터 변수 임을 명시해야 한다.

 함수 포인터 변수를 이용해서도 함수를 호출할 수 있어요.
  함수 포인터를 선언할 때 반환형과 매개변수 형을 일치시켜줘야 하는 이유는, 함수 포인터를 이용해서 해당
  함수의 호출을 가능하도록 하기 위함이다. (함수 포인터에 반환형 정보와 매개변수 형 정보가 존재해야 가리키는 함수
  를 호출할 수 있다. 이 두 가지는 함수 호출에 있어서 필요한 최소한의 정보이다)

 함수 포인터를 매개변수로 선언하는 방법
  27-3
 함수 포인터를 반환하는 함수의 정의
  int (*) (void);
 typedef 선언과 함수 포인터를 반환하는 함수의 정의

