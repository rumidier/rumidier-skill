Chapter 26 매크로와 선행처리기(Preprocessor)
	26-1 선행처리기와 매크로
	26-2 대표적인 선행처리 명령문
	26-3 조건부 컴파일(Conditional Compilation)을 위한 매크로
	26-4 매개변수의 결합과 문자열화


	page 730
Chapter 26 매크로와 선행처리기(Preprocessor)

26-1 선행처리기와 매크로
전처리는 선행처리를 의미합니다.
선행처리기가 하는 일은?


26-2 대표적인 선행처리 명령문
#define : Object-like macro
#define : Function-like macro
잘못된 매크로 정의
매크로 몸체에 괄호를 마구마구 칩시다.
매크로를 두 줄에 걸쳐서 정의하려면요
매크로 정의 시, 먼저 정의된 매크로도 사용이 가능하다.
매크로 함수의 장점
매크로 함수의 단점
그래서 이러한 함수들을 매크로로 정의 하지요


26-3 조건부 컴파일(Conditional Compilation)을 위한 매크로
#if...#endif : 참이라면
#ifdef...#endif : 정의 되었다면
#ifndef...#endif : 정의 되지 않았다면
#else의 삽입 : #if, #ifdef, #ifndef에 해당
#elif의 삽입 : #if에만 해당
#if의 한계와 #ifdef의 한계
#if와 함께 사용할 수 있는 defined 연산자


26-4 매개변수의 결합과 문자열화
printf 함수의 호출 문장을 매크로함수로 구성해 보았습니다 : #연산자의 설명을 위한 도입
문자열은 나란히 선언 하면 그냥 하나의 문자열로 인식이 되지요.
매개변수를 문자열로 표현해서 문제를 해결했습니다 : 매크로 # 연산자
학번을 조합하여 출력하는 프로그램을 작성해 봅시다 : ##연산자의 설명을 위한 도입
필요한 형태대로 조합 가능하도록 했지요 : 매크로 ## 연산자


그밖에 매크로
미리 정의되어 있는 매크로들
미리 정의 되어 있는 매크로의 활용
행 번호와 파일 이름을 지정 합니다 : #line
그 매크로는 기억에서 지워버리세요 : #undef
컴파일러에게 정보를 전달해 줍시다 : #pragma


